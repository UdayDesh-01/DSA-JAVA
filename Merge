public class MergeSort 
{
    // Function to merge two sorted halves
    public static void merge(int[] arr, int left, int mid, int right) 
    {
        // Sizes of two subarrays
        int n1 = mid - left + 1;
        int n2 = right - mid;

        // Create temporary arrays
        int[] L = new int[n1];
        int[] R = new int[n2];

        // Copy data into temp arrays
        for (int i = 0; i < n1; i++)
            L[i] = arr[left + i];
        for (int j = 0; j < n2; j++)
            R[j] = arr[mid + 1 + j];

        // Merge the two temp arrays
        int i = 0, j = 0;
        int k = left;

        while (i < n1 && j < n2) 
        {
            if (L[i] <= R[j]) 
            {
                arr[k] = L[i];
                i++;
            } else 
              {
                arr[k] = R[j];
                j++;
              }
            k++;
        }

        // Copy remaining elements of L[]
        while (i < n1) 
        {
            arr[k] = L[i];
            i++;
            k++;
        }

        // Copy remaining elements of R[]
        while (j < n2) 
        {
            arr[k] = R[j];
            j++;
            k++;
        }
    }

    // Recursive Merge Sort function
    public static void mergeSort(int[] arr, int left, int right) 
    {
        if (left < right) 
        {
            // Find middle point
            int mid = (left + right) / 2;

            // Sort first and second halves
            mergeSort(arr, left, mid);
            mergeSort(arr, mid + 1, right);

            // Merge sorted halves
            merge(arr, left, mid, right);
        }
    }

    // Utility function to print array
    public static void printArray(int[] arr) 
    {
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }

    // Main method
    public static void main(String[] args) 
    {
        int[] numbers = {64, 34, 25, 12, 22, 11, 90};

        System.out.println("Original array:");
        printArray(numbers);

        mergeSort(numbers, 0, numbers.length - 1);

        System.out.println("Sorted array:");
        printArray(numbers);
    }
}
