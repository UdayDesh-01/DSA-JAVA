public class BinarySearchIterative {
    // Function to perform binary search
    public static int binarySearch(int arr[], int target) {
        int left = 0, right = arr.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2; // avoid overflow

            if (arr[mid] == target)
                return mid; // found the target

            if (arr[mid] < target)
                left = mid + 1; // search right half
            else
                right = mid - 1; // search left half
        }

        return -1; // not found
    }

    public static void main(String[] args) {
        int[] arr = {2, 4, 7, 10, 14, 18, 25};
        int target = 14;

        int result = binarySearch(arr, target);

        if (result == -1)
            System.out.println("Element not found!");
        else
            System.out.println("Element found at index: " + result);
    }
}








//2


public class BinarySearchRecursive {
    public static int binarySearch(int arr[], int left, int right, int target) {
        if (left <= right) {
            int mid = left + (right - left) / 2;

            if (arr[mid] == target)
                return mid;

            if (arr[mid] > target)
                return binarySearch(arr, left, mid - 1, target);

            return binarySearch(arr, mid + 1, right, target);
        }
        return -1;
    }

    public static void main(String[] args) {
        int[] arr = {2, 4, 7, 10, 14, 18, 25};
        int target = 18;

        int result = binarySearch(arr, 0, arr.length - 1, target);

        if (result == -1)
            System.out.println("Element not found!");
        else
            System.out.println("Element found at index: " + result);
    }
}
